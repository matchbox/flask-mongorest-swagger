{"name":"Flask-Mongorest-Swagger","tagline":"Automatic Swagger API generation for Flask-MongoRest","body":"Flask-MongoRest-Swagger\r\n=======================\r\n### Automatic Swagger API generation for Flask-MongoRest\r\n\r\nFlask-MongoRest-Swagger takes the API you've built with\r\n[Flask-MongoRest](https://github.com/elasticsales/flask-mongorest), and\r\nautomatically generates API documentation compatible with the [Swagger\r\nframework](https://developers.helloreverb.com/swagger/).  You get beautiful,\r\nfunctional documentation for free!\r\n\r\n\r\n\r\nInstallation\r\n------------\r\nYou can install Flask-MongoRest-Swagger with `pip`, either\r\n\r\n1. `pip install flask-mongorest-swagger` or\r\n2. `pip install https://github.com/matchbox/flask-mongorest-swagger` (if you've got Git installed)\r\n\r\n\r\nDependencies\r\n------------\r\n* Flask >= 0.7\r\n* Flask-MongoRest >= 0.1.1\r\n* ordereddict >= 1.1 (only if you're on Python 2.4-2.6)\r\n\r\n\r\nExample\r\n------\r\n```python\r\nfrom flask.ext.mongorest import MongoRest, Resource, ResourceView\r\nfrom flask_mongorest_swagger import Swagger, Parameter, Endpoint\r\nfrom flask_mongorest_swagger import Operation, Model\r\nfrom yourapp import app\r\n\r\nrest_api = MongoRest(app)\r\nswagger = Swagger(rest_api)\r\n\r\nclass ApiResource(mongorest.Resource):\r\n    document = DocumentClass\r\n    parameters = {\r\n        'extra_parameter': Parameter('query', 'string',\r\n                                     'Does something else')}\r\n\r\n@swagger.register(url='/api-endpoint')\r\nclass ApiView(ResourceView):\r\n    resource = ApiResource\r\n\r\n@swagger.route(\r\n    '/api-function', methods=['POST'],\r\n    description='The description of this API view',\r\n    endpoints=[Endpoint(\r\n        Endpoint(\r\n            '/api-function/',\r\n            login_description,\r\n            operations=[Operation(\r\n                'POST', 'function', 'More description!',\r\n                response_class='Token',\r\n                parameters={\r\n                    'data': Parameter(\r\n                        'body', 'Input', 'Whatever you need to pass in',\r\n                        required=True)},\r\n                error_responses={401: 'Invalid e-mail/password'})])],\r\n    models={\r\n        'Input': Model('Input', {\r\n            'input_string': Property('string', 'Input to the function')}),\r\n        'Token': Model('Token', {\r\n            'token': Property(\r\n                'string', 'The token which comes back')})})\r\ndef api_function():\r\n    return 'Thanks!'\r\n\r\nif __name __ == '__main__':\r\n    app.run()\r\n```\r\n\r\nThis generates a Swagger API available at\r\n<http://localhost:5000/api-docs.json>.\r\n\r\n\r\nLicense\r\n-------\r\nFlask-MongoRest-Swagger is released under the MIT license.  See `LICENSE` for more details.\r\n\r\n\r\nChangelog\r\n---------\r\nSee `CHANGES.md` for the changes in each release of Flask-MongoRest-Swagger.\r\n\r\n\r\nContributing\r\n------------\r\nPull requests are always appreciated!\r\n\r\n\r\nThanks to\r\n---------\r\n* Swagger <https://developers.helloreverb.com/swagger/>\r\n* Flask <http://flask.pocoo.org/>\r\n* Flask-MongoRest <https://github.com/elasticsales/flask-mongorest>\r\n* Matchbox <http://matchbox.net/>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}